/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MapGeocoding.java
 *
 * Created on 21/07/2010, 10:44:25 AM
 */

package com.pstreets.gisengine.demo;

import com.mapdigit.gis.MapLayer;
import com.mapdigit.gis.MapPoint;
import com.mapdigit.gis.drawing.IGraphics;
import com.mapdigit.gis.drawing.IImage;
import com.mapdigit.gis.geometry.GeoLatLng;
import com.mapdigit.gis.raster.IMapDrawingListener;
import com.mapdigit.gis.raster.IReaderListener;
import com.mapdigit.gis.raster.MapTileDownloadManager;
import com.mapdigit.gis.raster.MapType;
import com.mapdigit.gis.raster.RasterMap;
import com.mapdigit.gis.service.IGeocodingListener;
import com.pstreets.common.drawing.JavaSEGraphicsFactory;
import java.awt.image.BufferedImage;
import javax.swing.ImageIcon;

/**
 *
 * @author jshen
 */
public class MapGeocoding extends MapDemoApp implements IReaderListener,
        IMapDrawingListener,IGeocodingListener {

    private RasterMap map;
    private MapTileDownloadManager mapTileDownloadManager;
    /** Creates new form MapGeocoding */
    public MapGeocoding() {
        initComponents();
        MapLayer.setAbstractGraphicsFactory(JavaSEGraphicsFactory.getInstance());
        mapTileDownloadManager = new MapTileDownloadManager(this);
        map = new RasterMap(2048, 2048, mapTileDownloadManager);
        mapTileDownloadManager.start();
        map.setMapDrawingListener(this);
        GeoLatLng center = new GeoLatLng(-31.948275, 115.857562);
        map.setCenter(center, 13, MapType.GOOGLEMAP);
        map.setGeocodingListener(this);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mapLabel = new javax.swing.JLabel();
        btnFindAddress = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mapLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnFindAddress.setText("Find Address");
        btnFindAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindAddressActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mapLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnFindAddress)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(mapLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(btnFindAddress)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFindAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindAddressActionPerformed
        map.getLocations("7 Fairway,Crawley,WA 6009,Australia");
    }//GEN-LAST:event_btnFindAddressActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MapGeocoding().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFindAddress;
    private javax.swing.JLabel mapLabel;
    // End of variables declaration//GEN-END:variables

    public void readProgress(int arg0, int arg1) {
        System.out.println(arg0 + "/" + arg1);
    }

    public void done() {
        System.out.println("done");
        IImage mapImage = MapLayer.getAbstractGraphicsFactory().createImage(mapLabel.getWidth(), mapLabel.getHeight());
        IGraphics mapGraphics = mapImage.getGraphics();
        map.paint(mapGraphics);
        ImageIcon imageIcon = new ImageIcon((BufferedImage) mapImage.getNativeImage());
        mapLabel.setIcon(imageIcon);
    }

    public void done(String query, MapPoint[] result) {
        if(result!=null){
            map.panTo(result[0].getPoint());
        }
    }
}
